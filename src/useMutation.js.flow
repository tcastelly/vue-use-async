// @flow

import { type Computed, type Ref } from '@vue/composition-api';
import type Xhr from './Xhr'

export type UseMutationReturn<T> = {|
  onError?: ((Error | Object) => any) => any,
  onEnd?: ((ProgressEvent, Xhr<U>) => any) => any;
  isPending: Ref<boolean>,
  error: Ref<?Error | Object>,
  data: Ref<T>,
  promise: Computed<Promise<T>>,
|}

declare export default function useMutation<T>(
  func: (...any) => Promise<T>,
  params?: Ref<any> | any,
): UseMutationReturn<T>;

